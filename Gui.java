/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dsdoublelinkedlist;

import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author amood
 */
public class Gui extends javax.swing.JFrame {

    /**
     * Creates new form Gui
     */
    private DoubleLinkedList list;

    public Gui() {
        initComponents();
        list = null;
        this.setVisible(true);
        //  InsertPanel.setBounds(PrintPanel.getBounds());
        //  DeletePanel.setBounds(PrintPanel.getBounds());
        InsertPanel.setVisible(false);
        PrintPanel.setVisible(false);
        DeletePanel.setVisible(false);
        deleteRadioGroup.add(DeleteHead);
        deleteRadioGroup.add(DeleteById);
        deleteRadioGroup.add(DeleteByName);
        deleteRadioGroup.add(DeleteTail);
        insertRadioGroup.add(InsertLast);
        insertRadioGroup.add(InsertAfterId);
        insertRadioGroup.add(InsertAfterName);
        insertRadioGroup.add(InsertAtHead);
        pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        deleteRadioGroup = new javax.swing.ButtonGroup();
        insertRadioGroup = new javax.swing.ButtonGroup();
        createButton = new javax.swing.JButton();
        insertButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        printButton = new javax.swing.JButton();
        nothingButton = new javax.swing.JButton();
        SortToggleButton = new javax.swing.JToggleButton();
        DeletePanel = new javax.swing.JPanel();
        inputDeleteId = new javax.swing.JSpinner();
        inputDeleteFirst = new javax.swing.JTextField();
        inputDeleteLast = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        DeleteById = new javax.swing.JRadioButton();
        DeleteByName = new javax.swing.JRadioButton();
        DeleteHead = new javax.swing.JRadioButton();
        DeleteTail = new javax.swing.JRadioButton();
        deleteConfirmBtn = new javax.swing.JButton();
        InsertPanel = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        InsertAfterId = new javax.swing.JRadioButton();
        InsertAtHead = new javax.swing.JRadioButton();
        InsertLast = new javax.swing.JRadioButton();
        InsertAfterName = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        inputInsertAfterId = new javax.swing.JSpinner();
        inputInsertAfterFirst = new javax.swing.JTextField();
        inputInsertAfterLast = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        insertConfirmBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        inputInsertFin = new javax.swing.JSpinner();
        inputInsertMid = new javax.swing.JSpinner();
        inputInsertLast = new javax.swing.JTextField();
        inputInsertFirst = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        newIds = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        PrintPanel = new javax.swing.JPanel();
        PrintPanescroll = new javax.swing.JScrollPane();
        PrintTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Student");
        setBounds(new java.awt.Rectangle(250, 250, 800, 450));
        setLocation(new java.awt.Point(250, 250));
        setMaximizedBounds(new java.awt.Rectangle(0, 0, 1000, 400));
        setResizable(false);

        createButton.setText("Create");
        createButton.setToolTipText("");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        insertButton.setText("Insert");
        insertButton.setEnabled(false);
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.setEnabled(false);
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        printButton.setText("Print");
        printButton.setEnabled(false);
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        nothingButton.setText("...");
        nothingButton.setEnabled(false);
        nothingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nothingButtonActionPerformed(evt);
            }
        });

        SortToggleButton.setText("sorted");
        SortToggleButton.setEnabled(false);
        SortToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortToggleButtonActionPerformed(evt);
            }
        });

        DeletePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Deletion"));
        DeletePanel.setMaximumSize(new java.awt.Dimension(800, 170));
        DeletePanel.setMinimumSize(new java.awt.Dimension(800, 170));

        inputDeleteId.setEnabled(false);

        inputDeleteFirst.setEnabled(false);
        inputDeleteFirst.setMaximumSize(new java.awt.Dimension(59, 20));
        inputDeleteFirst.setMinimumSize(new java.awt.Dimension(59, 20));

        inputDeleteLast.setEnabled(false);
        inputDeleteLast.setMaximumSize(new java.awt.Dimension(59, 20));
        inputDeleteLast.setMinimumSize(new java.awt.Dimension(59, 20));

        jLabel2.setText("ID");

        jLabel3.setText("First Name");

        jLabel4.setText("Last Name");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Deleting Method"));

        DeleteById.setText("By ID");
        DeleteById.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                DeleteByIdStateChanged(evt);
            }
        });

        DeleteByName.setText("By Name");
        DeleteByName.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                DeleteByNameStateChanged(evt);
            }
        });

        DeleteHead.setText("Head");

        DeleteTail.setText("Tail");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DeleteTail)
                    .addComponent(DeleteByName)
                    .addComponent(DeleteById)
                    .addComponent(DeleteHead))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DeleteHead)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DeleteById)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DeleteByName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DeleteTail)
                .addContainerGap())
        );

        DeleteHead.getAccessibleContext().setAccessibleDescription("");

        deleteConfirmBtn.setText("Confirm");
        deleteConfirmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteConfirmBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DeletePanelLayout = new javax.swing.GroupLayout(DeletePanel);
        DeletePanel.setLayout(DeletePanelLayout);
        DeletePanelLayout.setHorizontalGroup(
            DeletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DeletePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(DeletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(DeletePanelLayout.createSequentialGroup()
                        .addGroup(DeletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addGroup(DeletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inputDeleteId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputDeleteLast, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                            .addComponent(inputDeleteFirst, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(deleteConfirmBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        DeletePanelLayout.setVerticalGroup(
            DeletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DeletePanelLayout.createSequentialGroup()
                .addGroup(DeletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DeletePanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(DeletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputDeleteId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(DeletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputDeleteFirst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(DeletePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputDeleteLast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteConfirmBtn))
                    .addGroup(DeletePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        InsertPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Insertion"));
        InsertPanel.setMaximumSize(new java.awt.Dimension(800, 170));
        InsertPanel.setMinimumSize(new java.awt.Dimension(800, 170));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Insertion Method"));

        InsertAfterId.setText("insert after id");
        InsertAfterId.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                InsertAfterIdStateChanged(evt);
            }
        });

        InsertAtHead.setText("at Head");

        InsertLast.setText("insert last");

        InsertAfterName.setText("insert after name");
        InsertAfterName.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                InsertAfterNameStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(InsertAtHead)
                    .addComponent(InsertAfterId)
                    .addComponent(InsertLast)
                    .addComponent(InsertAfterName))
                .addGap(20, 20, 20))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(InsertAtHead)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(InsertAfterId)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(InsertAfterName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(InsertLast)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Insert after:"));

        jLabel6.setText("First Name");

        jLabel7.setText("Last Name");

        inputInsertAfterId.setEnabled(false);
        inputInsertAfterId.setValue(1);

        inputInsertAfterFirst.setEnabled(false);
        inputInsertAfterFirst.setMaximumSize(new java.awt.Dimension(59, 20));
        inputInsertAfterFirst.setMinimumSize(new java.awt.Dimension(59, 20));

        inputInsertAfterLast.setEnabled(false);
        inputInsertAfterLast.setMaximumSize(new java.awt.Dimension(59, 20));
        inputInsertAfterLast.setMinimumSize(new java.awt.Dimension(59, 20));

        jLabel5.setText("ID");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(inputInsertAfterId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputInsertAfterLast, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inputInsertAfterFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputInsertAfterId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputInsertAfterFirst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputInsertAfterLast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)))
        );

        insertConfirmBtn.setText("Confirm");
        insertConfirmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertConfirmBtnActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("New Student"));

        inputInsertFin.setValue(1);
        inputInsertFin.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                inputInsertFinStateChanged(evt);
            }
        });

        inputInsertMid.setValue(1);
        inputInsertMid.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                inputInsertMidStateChanged(evt);
            }
        });

        inputInsertLast.setMaximumSize(new java.awt.Dimension(144, 20));
        inputInsertLast.setMinimumSize(new java.awt.Dimension(144, 20));

        inputInsertFirst.setMaximumSize(new java.awt.Dimension(144, 20));
        inputInsertFirst.setMinimumSize(new java.awt.Dimension(144, 20));
        inputInsertFirst.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                inputInsertFirstMouseMoved(evt);
            }
        });

        jLabel1.setText("Id:");
        jLabel1.setName("id"); // NOI18N
        jLabel1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jLabel1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        newIds.setText("1");
        newIds.setName("id"); // NOI18N
        newIds.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                newIdsAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jLabel10.setText("First Name");

        jLabel11.setText("Last Name");

        jLabel12.setText("Midterm");

        jLabel13.setText("Final");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inputInsertLast, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inputInsertFirst, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inputInsertFin)
                            .addComponent(inputInsertMid, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(newIds, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(newIds))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(inputInsertFirst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(inputInsertLast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(inputInsertMid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(inputInsertFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout InsertPanelLayout = new javax.swing.GroupLayout(InsertPanel);
        InsertPanel.setLayout(InsertPanelLayout);
        InsertPanelLayout.setHorizontalGroup(
            InsertPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InsertPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(InsertPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insertConfirmBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        InsertPanelLayout.setVerticalGroup(
            InsertPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InsertPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InsertPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(InsertPanelLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(insertConfirmBtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PrintPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Data:"));

        PrintTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Mid", "Final", "Total", "Grade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        PrintTable.setColumnSelectionAllowed(true);
        PrintTable.getTableHeader().setReorderingAllowed(false);
        PrintPanescroll.setViewportView(PrintTable);
        PrintTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (PrintTable.getColumnModel().getColumnCount() > 0) {
            PrintTable.getColumnModel().getColumn(0).setResizable(false);
            PrintTable.getColumnModel().getColumn(0).setPreferredWidth(10);
            PrintTable.getColumnModel().getColumn(1).setResizable(false);
            PrintTable.getColumnModel().getColumn(1).setPreferredWidth(120);
            PrintTable.getColumnModel().getColumn(2).setResizable(false);
            PrintTable.getColumnModel().getColumn(2).setPreferredWidth(20);
            PrintTable.getColumnModel().getColumn(3).setResizable(false);
            PrintTable.getColumnModel().getColumn(3).setPreferredWidth(20);
            PrintTable.getColumnModel().getColumn(4).setResizable(false);
            PrintTable.getColumnModel().getColumn(4).setPreferredWidth(30);
            PrintTable.getColumnModel().getColumn(5).setResizable(false);
            PrintTable.getColumnModel().getColumn(5).setPreferredWidth(50);
        }

        javax.swing.GroupLayout PrintPanelLayout = new javax.swing.GroupLayout(PrintPanel);
        PrintPanel.setLayout(PrintPanelLayout);
        PrintPanelLayout.setHorizontalGroup(
            PrintPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PrintPanescroll, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        PrintPanelLayout.setVerticalGroup(
            PrintPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PrintPanescroll, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(InsertPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PrintPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeletePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(createButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(insertButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(printButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SortToggleButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nothingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createButton)
                    .addComponent(insertButton)
                    .addComponent(deleteButton)
                    .addComponent(printButton)
                    .addComponent(nothingButton)
                    .addComponent(SortToggleButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(DeletePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(PrintPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(InsertPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed

        createButton.setEnabled(false);
        insertButton.setEnabled(true);
        nothingButton.setEnabled(true);
        list = DoubleLinkedList.getInstance();
        JOptionPane.showMessageDialog(null, "create success", "create success", 1);
    }//GEN-LAST:event_createButtonActionPerformed

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        showPrintPanel();
        ((DefaultTableModel) PrintTable.getModel()).setRowCount(0);
        setTheTable(list);
        list.print();
        pack();

    }//GEN-LAST:event_printButtonActionPerformed

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed
        showInsertPanel();
        pack();

    }//GEN-LAST:event_insertButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        showDeletePanel();
        pack();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void nothingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nothingButtonActionPerformed

    }//GEN-LAST:event_nothingButtonActionPerformed

    private void DeleteByNameStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_DeleteByNameStateChanged
        // TODO add your handling code here:
        if (DeleteByName.isSelected()) {
            inputDeleteFirst.setEnabled(true);
            inputDeleteLast.setEnabled(true);
            inputDeleteId.setEnabled(false);
        } else {
            inputDeleteFirst.setEnabled(false);
            inputDeleteLast.setEnabled(false);
        }
    }//GEN-LAST:event_DeleteByNameStateChanged

    private void DeleteByIdStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_DeleteByIdStateChanged
        // TODO add your handling code here:
        if (DeleteById.isSelected()) {
            inputDeleteFirst.setEnabled(false);
            inputDeleteLast.setEnabled(false);
            inputDeleteId.setEnabled(true);
        } else {
            inputDeleteId.setEnabled(false);
        }
    }//GEN-LAST:event_DeleteByIdStateChanged

    private void InsertAfterIdStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_InsertAfterIdStateChanged
        // TODO add your handling code here:
        if (InsertAfterId.isSelected()) {
            inputInsertAfterFirst.setEnabled(false);
            inputInsertAfterLast.setEnabled(false);
            inputInsertAfterId.setEnabled(true);
        } else {
            inputInsertAfterId.setEnabled(false);
        }
    }//GEN-LAST:event_InsertAfterIdStateChanged

    private void InsertAfterNameStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_InsertAfterNameStateChanged
        // TODO add your handling code here:
        if (InsertAfterName.isSelected()) {
            inputInsertAfterFirst.setEnabled(true);
            inputInsertAfterLast.setEnabled(true);
            inputInsertAfterId.setEnabled(false);
        } else {
            inputInsertAfterFirst.setEnabled(false);
            inputInsertAfterLast.setEnabled(false);
        }
    }//GEN-LAST:event_InsertAfterNameStateChanged

    private void insertConfirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertConfirmBtnActionPerformed
        Node newNode = null;
        try {
            newNode = new Node(new Student(inputInsertFirst.getText(),
                    inputInsertLast.getText(),
                    (int) inputInsertMid.getValue(),
                    (int) inputInsertFin.getValue()));
        } catch (marksNotInRangeException ex) {
            JOptionPane.showMessageDialog(null, "Not in range correct the marks " + ex.getMessage(), " ", JOptionPane.ERROR_MESSAGE);
        }
        try {
            insertHandler(newNode);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Select an insertion method", " ", JOptionPane.ERROR_MESSAGE);
            Student.ids--;
        }
        newIds.setText(String.valueOf(Student.ids));
        if (Student.ids > 0) {
            deleteButton.setEnabled(true);
            printButton.setEnabled(true);
            SortToggleButton.setEnabled(true);
        }
    }//GEN-LAST:event_insertConfirmBtnActionPerformed

    private void deleteConfirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteConfirmBtnActionPerformed
        // TODO add your handling code here:
        if (list.isEmpty()) {
            deleteButton.setEnabled(false);
            printButton.setEnabled(false);
            SortToggleButton.setEnabled(false);
            insertButton.doClick();
            return;
        }
        try {
            DeleteHandler();
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Select an deletion method", " ", JOptionPane.ERROR_MESSAGE);

        }


    }//GEN-LAST:event_deleteConfirmBtnActionPerformed

    private void newIdsAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_newIdsAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_newIdsAncestorAdded

    private void jLabel1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jLabel1AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1AncestorAdded

    private void inputInsertFirstMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inputInsertFirstMouseMoved

    }//GEN-LAST:event_inputInsertFirstMouseMoved

    private void inputInsertMidStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_inputInsertMidStateChanged
        if (Integer.parseInt(String.valueOf(inputInsertMid.getValue())) >= 40) {
            inputInsertMid.setValue(40);
        }
        if (Integer.parseInt(String.valueOf(inputInsertMid.getValue())) < 0) {
            inputInsertMid.setValue(0);
        }
    }//GEN-LAST:event_inputInsertMidStateChanged

    private void SortToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortToggleButtonActionPerformed
        // TODO add your handling code here:
        if (SortToggleButton.isSelected()) {
            list.sortByName();
            SortToggleButton.setText("Sorted By Name");
        } else {
            list.sortById();
            SortToggleButton.setText("Sorted By Id");
        }
        printButton.doClick();
    }//GEN-LAST:event_SortToggleButtonActionPerformed

    private void inputInsertFinStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_inputInsertFinStateChanged
        if (Integer.parseInt(String.valueOf(inputInsertFin.getValue())) >= 60) {
            inputInsertFin.setValue(60);
        }
        if (Integer.parseInt(String.valueOf(inputInsertFin.getValue())) < 0) {
            inputInsertFin.setValue(0);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_inputInsertFinStateChanged

    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Gui().setVisible(true);
        });

    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton DeleteById;
    private javax.swing.JRadioButton DeleteByName;
    private javax.swing.JRadioButton DeleteHead;
    private javax.swing.JPanel DeletePanel;
    private javax.swing.JRadioButton DeleteTail;
    private javax.swing.JRadioButton InsertAfterId;
    private javax.swing.JRadioButton InsertAfterName;
    private javax.swing.JRadioButton InsertAtHead;
    private javax.swing.JRadioButton InsertLast;
    private javax.swing.JPanel InsertPanel;
    private javax.swing.JPanel PrintPanel;
    private javax.swing.JScrollPane PrintPanescroll;
    private javax.swing.JTable PrintTable;
    private javax.swing.JToggleButton SortToggleButton;
    private javax.swing.JButton createButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton deleteConfirmBtn;
    private javax.swing.ButtonGroup deleteRadioGroup;
    private javax.swing.JTextField inputDeleteFirst;
    private javax.swing.JSpinner inputDeleteId;
    private javax.swing.JTextField inputDeleteLast;
    private javax.swing.JTextField inputInsertAfterFirst;
    private javax.swing.JSpinner inputInsertAfterId;
    private javax.swing.JTextField inputInsertAfterLast;
    private javax.swing.JSpinner inputInsertFin;
    private javax.swing.JTextField inputInsertFirst;
    private javax.swing.JTextField inputInsertLast;
    private javax.swing.JSpinner inputInsertMid;
    private javax.swing.JButton insertButton;
    private javax.swing.JButton insertConfirmBtn;
    private javax.swing.ButtonGroup insertRadioGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel newIds;
    private javax.swing.JButton nothingButton;
    private javax.swing.JButton printButton;
    // End of variables declaration//GEN-END:variables
    //</editor-fold>
    private void visuallyRepresent() {
        Node tmp = this.list.firstNode;

    }

    String getSelectedButton(ButtonGroup btngrp) {
        for (Enumeration<AbstractButton> buttons = btngrp.getElements(); buttons.hasMoreElements();) {
            AbstractButton button = buttons.nextElement();
            if (button.isSelected()) {
                return button.getText();
            }
        }
        return null;
    }

    private void insertHandler(Node newNode) throws NullPointerException {
        String radioButtonText = getSelectedButton(this.insertRadioGroup);

        if (radioButtonText.equals(InsertAtHead.getText())) {
            list.insertFirst(newNode);
            return;
        }
        if (radioButtonText.equals(InsertAfterId.getText())
                || radioButtonText.equals(InsertAfterName.getText())) {
            NodeWrapper afterNode = null;
            if (inputInsertAfterFirst.isEnabled()) {
                afterNode = new NodeWrapper(inputInsertAfterFirst.getText(), inputInsertAfterLast.getText());
            }
            if (inputInsertAfterId.isEnabled()) {
                afterNode = new NodeWrapper((int) inputInsertAfterId.getValue());
            }
            if (afterNode != null) {
                list.insertAfter(newNode, afterNode);
            } else {
                list.insertLast(newNode);
                JOptionPane.showMessageDialog(null, "no Entries so inserted last");
            }
            return;
        }
        if (radioButtonText.equals(InsertLast.getText())) {
            list.insertLast(newNode);
            return;
        }

    }

    private void DeleteHandler() throws NullPointerException {
        String radioButtonText = getSelectedButton(this.deleteRadioGroup);
        if (radioButtonText.equals(DeleteHead.getText())) {
            list.deleteFirst();
            return;
        }
        if (radioButtonText.equals(DeleteById.getText())) {
            list.delete((int) inputDeleteId.getValue());
            return;
        }
        if (radioButtonText.equals(DeleteByName.getText())) {
            list.delete(inputDeleteFirst.getText(), inputDeleteLast.getText());
            return;
        }
        if (radioButtonText.equals(DeleteTail.getText())) {
            list.deleteLast();
        }
    }

    void showInsertPanel() {
        DeletePanel.setVisible(false);
        InsertPanel.setVisible(true);
        PrintPanel.setVisible(false);
    }

    void showDeletePanel() {
        DeletePanel.setVisible(true);
        InsertPanel.setVisible(false);
        PrintPanel.setVisible(false);
    }

    void showPrintPanel() {
        DeletePanel.setVisible(false);
        InsertPanel.setVisible(false);
        PrintPanel.setVisible(true);
        pack();
    }

    void clearAllFields() {

    }

    private void setTheTable(DoubleLinkedList list) {
        DefaultTableModel model = (DefaultTableModel) PrintTable.getModel();
        Node cur = list.firstNode;
        while (cur.n != null) {
            model.addRow((String[]) cur.asRow());
            cur = cur.n;
        }
    }

}
